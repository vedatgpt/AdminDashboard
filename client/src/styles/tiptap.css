/* TipTap Editor Styles */
.ProseMirror {
  outline: none;
  padding: 1rem;
  min-height: 200px;
  line-height: 1.6;
}

.ProseMirror p {
  margin: 0;
  line-height: 1.4;
}

.ProseMirror p + p {
  margin-top: 0.5rem;
}

.ProseMirror p:first-child {
  margin-top: 0;
}

.ProseMirror p:last-child {
  margin-bottom: 0;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.75rem 0;
}

.ProseMirror li {
  margin: 0.25rem 0;
}

.ProseMirror strong {
  font-weight: bold;
}

.ProseMirror em {
  font-style: italic;
}

.ProseMirror u {
  text-decoration: underline;
}

.ProseMirror a {
  color: #EC7830;
  text-decoration: underline;
}

.ProseMirror a:hover {
  color: #d86a28;
}

/* Text alignment styles */
.ProseMirror p[style*="text-align: center"] {
  text-align: center;
}

.ProseMirror p[style*="text-align: right"] {
  text-align: right;
}

.ProseMirror p[style*="text-align: justify"] {
  text-align: justify;
}

.ProseMirror p[style*="text-align: left"] {
  text-align: left;
}

/* TipTap Bold + Color - SON ÇÖZÜM */

/* Temel Bold styling */
.ProseMirror strong {
  font-weight: 700 !important;
}

/* TipTap TextStyle ile color extension */
.ProseMirror span[style*="color"] {
  /* Renk inline style ile uygulanıyor */
}

/* ANAHTAR: Bold + Color birlikte çalışması */
.ProseMirror strong span[style*="color"] {
  font-weight: 700 !important;
}

.ProseMirror span[style*="color"] strong {
  font-weight: 700 !important;  
}

/* Nested durumlar için */
.ProseMirror strong span[style*="color"] span,
.ProseMirror span[style*="color"] strong span,
.ProseMirror span span[style*="color"] strong {
  font-weight: 700 !important;
}

/* Multiple nesting combinations */
.ProseMirror strong > span[style*="color"],
.ProseMirror span[style*="color"] > strong {
  font-weight: 700 !important;
}

/* Keep marks birlikte çalıştırmak için */
.ProseMirror .tiptap-textstyle {
  /* TextStyle mark container */
}

.ProseMirror .tiptap-color {
  /* Color mark container */
}

/* Resizable image styling */
.ProseMirror .img-resize-container {
  position: relative;
  display: inline-block;
  margin: 8px 0;
}

.ProseMirror .img-resize-container img {
  display: block;
  border-radius: 4px;
  cursor: pointer;
}

.ProseMirror .img-resize-container:hover img,
.ProseMirror .img-resize-container.selected img {
  outline: 2px solid #EC7830;
  outline-offset: 2px;
}

/* Resize handles */
.ProseMirror .img-resize-container .resize-handle {
  position: absolute;
  width: 10px;
  height: 10px;
  background: #EC7830;
  border: 2px solid white;
  border-radius: 2px;
  display: none;
  z-index: 10;
}

.ProseMirror .img-resize-container:hover .resize-handle,
.ProseMirror .img-resize-container.selected .resize-handle {
  display: block;
}

.ProseMirror .img-resize-container .resize-handle.nw {
  top: -6px;
  left: -6px;
  cursor: nw-resize;
}

.ProseMirror .img-resize-container .resize-handle.ne {
  top: -6px;
  right: -6px;
  cursor: ne-resize;
}

.ProseMirror .img-resize-container .resize-handle.sw {
  bottom: -6px;
  left: -6px;
  cursor: sw-resize;
}

.ProseMirror .img-resize-container .resize-handle.se {
  bottom: -6px;
  right: -6px;
  cursor: se-resize;
}

/* Image support for links */
.ProseMirror img {
  max-width: 100%;
  height: auto;
  margin: 8px 0;
  border-radius: 4px;
}

/* Focus styles */
.ProseMirror:focus {
  outline: none;
}

/* Empty editor placeholder */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
}